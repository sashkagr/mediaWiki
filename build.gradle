plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.sonarqube" version "4.4.1.3373"
    id "jacoco"
}

jacocoTestReport {
        reports {
            xml.required = true
            html.required = true
            csv.required = true
    }
}


sonarqube {
    properties {
        property "sonar.projectKey", "sashkagr_MediaWiki"
        property "sonar.organization", "sashkagr-1"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacococ"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.jacoco.report","target/jacoco.exec"
    }
}
sonar {
    properties {
        property "sonar.projectKey", "sashkagr_MediaWiki"
        property "sonar.organization", "sashkagr-1"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacococ"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.jacoco.report","target/jacoco.exec"
    }
}
tasks.check.dependsOn test // Добавляем выполнение тестов в цель check

group = 'org.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    implementation 'org.slf4j:slf4j-api:2.0.12'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
    testImplementation 'org.slf4j:slf4j-log4j12:2.0.12'
    testImplementation 'org.slf4j:slf4j-simple:2.0.12'

    implementation 'org.apache.tomcat:tomcat-catalina:10.1.18'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'mysql:mysql-connector-java:8.0.27' // Зависимость для MySQL JDBC драйвера
    implementation 'org.json:json:20231013' // Зависимость для работы с JSON
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    implementation 'ch.qos.logback:logback-classic:1.4.14'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.3'

    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.hibernate.orm:hibernate-core:6.4.4.Final'


    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.6.0'
}


jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    dependsOn test
}

//jacocoTestCoverageVerification {
//    violationRules {
//        rule {
//            limit {
//                // минимальное покрытие тестами в процентах
//                minimum = 0.80
//            }
//        }
//    }
//}
//
//check.dependsOn jacocoTestCoverageVerification
//

test {
    finalizedBy jacocoTestReport
    testClassesDirs = fileTree(dir: 'build/classes/java/test')
        sourceSets.test.java.srcDirs = ['src/test/java']
        testLogging {
            events "passed", "skipped", "failed"
        }
        useJUnitPlatform()

}
